#High Throughput Case Control Clump Pipeline
#Tychele Turner, Ph.D.
#June 9, 2016

import os

#configuration
if config == {}:
    configfile: "case.control.config.json"

PROTEIN_FILE = config["protein_file"]
MUTFILE = config["mutation_file"]
CONTROLS = config["control_file"]
PERMUTATIONS = config["permutations"]

#show proteins to run
PROTEINS = []
with open(PROTEIN_FILE) as f:
    PROTEINS = f.read().splitlines()
print(PROTEINS)

rule all:
        input: MUTFILE, expand("track/{protein}_finished.txt", protein = PROTEINS)
	params: sge_opts="-l mfree=20G -N run_all" 

rule combine:
        """combine all files and make the output clean"""
        shell: """
        cat clump_results/* | grep -v 'Loading' | grep -v 'Package' > clump.permutations.testing.txt
        sed -i '1 iGENE\tPROTEIN_ID\tSTUDY_NAME\tCLUMP_SCORE_DIFFERENCE(Controls-Cases)\tP-value(Probability Cases have a CLUMP score greater than the Controls)\tP-value(Probability Cases have a CLUMP score less than Controls)\tCASES_Raw_Clump_Score\tCONTROL_Raw_Clump_Score' clump.permutations.testing.txt
        rm -rf input_genes/
        rm -rf control_genes/
        rm -rf clump_results/
        """

rule case_control_clump:
        input: MUTFILE
        output: "track/{protein}_finished.txt"
        params: prefix="{protein}", sge_opts="-l mfree=500M,h_rt=24:00:00 -N case_control_clump -cwd"
        shell: """
        set +e

        module load python/2.7.3
        module load numpy

        mkdir -p input_genes
        mkdir -p control_genes
        mkdir -p clump_results
        mkdir -p track

        grep -w {params.prefix} {input} > input_genes/{params.prefix}
        grep -w {params.prefix} {CONTROLS} > control_genes/{params.prefix}
        python ../combined.clump.py -f input_genes/{params.prefix} -p ../protein.2.length.txt -c control_genes/{params.prefix} -z {PERMUTATIONS} > clump_results/{params.prefix}

        touch {output}
	"""

rule clean:
	"""clean up temporary files"""
	shell: """
	rm -rf track/
        """

